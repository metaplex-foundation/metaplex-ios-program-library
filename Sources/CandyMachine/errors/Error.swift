/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita-swift
 */
import Foundation

public enum candy_machineError: String, Error {
    /**
 * IncorrectOwner: '0x1770'
 *
 * @category Errors
 * @category generated
 */
    case incorrectOwnerError = "0x1770"
    /**
 * Uninitialized: '0x1771'
 *
 * @category Errors
 * @category generated
 */
    case uninitializedError = "0x1771"
    /**
 * MintMismatch: '0x1772'
 *
 * @category Errors
 * @category generated
 */
    case mintMismatchError = "0x1772"
    /**
 * IndexGreaterThanLength: '0x1773'
 *
 * @category Errors
 * @category generated
 */
    case indexGreaterThanLengthError = "0x1773"
    /**
 * NumericalOverflowError: '0x1774'
 *
 * @category Errors
 * @category generated
 */
    case numericalOverflowErrorError = "0x1774"
    /**
 * TooManyCreators: '0x1775'
 *
 * @category Errors
 * @category generated
 */
    case tooManyCreatorsError = "0x1775"
    /**
 * UuidMustBeExactly6Length: '0x1776'
 *
 * @category Errors
 * @category generated
 */
    case uuidMustBeExactly6LengthError = "0x1776"
    /**
 * NotEnoughTokens: '0x1777'
 *
 * @category Errors
 * @category generated
 */
    case notEnoughTokensError = "0x1777"
    /**
 * NotEnoughSOL: '0x1778'
 *
 * @category Errors
 * @category generated
 */
    case notEnoughSOLError = "0x1778"
    /**
 * TokenTransferFailed: '0x1779'
 *
 * @category Errors
 * @category generated
 */
    case tokenTransferFailedError = "0x1779"
    /**
 * CandyMachineEmpty: '0x177a'
 *
 * @category Errors
 * @category generated
 */
    case candyMachineEmptyError = "0x177a"
    /**
 * CandyMachineNotLive: '0x177b'
 *
 * @category Errors
 * @category generated
 */
    case candyMachineNotLiveError = "0x177b"
    /**
 * HiddenSettingsConfigsDoNotHaveConfigLines: '0x177c'
 *
 * @category Errors
 * @category generated
 */
    case hiddenSettingsConfigsDoNotHaveConfigLinesError = "0x177c"
    /**
 * CannotChangeNumberOfLines: '0x177d'
 *
 * @category Errors
 * @category generated
 */
    case cannotChangeNumberOfLinesError = "0x177d"
    /**
 * DerivedKeyInvalid: '0x177e'
 *
 * @category Errors
 * @category generated
 */
    case derivedKeyInvalidError = "0x177e"
    /**
 * PublicKeyMismatch: '0x177f'
 *
 * @category Errors
 * @category generated
 */
    case publicKeyMismatchError = "0x177f"
    /**
 * NoWhitelistToken: '0x1780'
 *
 * @category Errors
 * @category generated
 */
    case noWhitelistTokenError = "0x1780"
    /**
 * TokenBurnFailed: '0x1781'
 *
 * @category Errors
 * @category generated
 */
    case tokenBurnFailedError = "0x1781"
    /**
 * GatewayAppMissing: '0x1782'
 *
 * @category Errors
 * @category generated
 */
    case gatewayAppMissingError = "0x1782"
    /**
 * GatewayTokenMissing: '0x1783'
 *
 * @category Errors
 * @category generated
 */
    case gatewayTokenMissingError = "0x1783"
    /**
 * GatewayTokenExpireTimeInvalid: '0x1784'
 *
 * @category Errors
 * @category generated
 */
    case gatewayTokenExpireTimeInvalidError = "0x1784"
    /**
 * NetworkExpireFeatureMissing: '0x1785'
 *
 * @category Errors
 * @category generated
 */
    case networkExpireFeatureMissingError = "0x1785"
    /**
 * CannotFindUsableConfigLine: '0x1786'
 *
 * @category Errors
 * @category generated
 */
    case cannotFindUsableConfigLineError = "0x1786"
    /**
 * InvalidString: '0x1787'
 *
 * @category Errors
 * @category generated
 */
    case invalidStringError = "0x1787"
    /**
 * SuspiciousTransaction: '0x1788'
 *
 * @category Errors
 * @category generated
 */
    case suspiciousTransactionError = "0x1788"
    /**
 * CannotSwitchToHiddenSettings: '0x1789'
 *
 * @category Errors
 * @category generated
 */
    case cannotSwitchToHiddenSettingsError = "0x1789"
    /**
 * IncorrectSlotHashesPubkey: '0x178a'
 *
 * @category Errors
 * @category generated
 */
    case incorrectSlotHashesPubkeyError = "0x178a"
    /**
 * IncorrectCollectionAuthority: '0x178b'
 *
 * @category Errors
 * @category generated
 */
    case incorrectCollectionAuthorityError = "0x178b"
    /**
 * MismatchedCollectionPDA: '0x178c'
 *
 * @category Errors
 * @category generated
 */
    case mismatchedCollectionPDAError = "0x178c"
    /**
 * MismatchedCollectionMint: '0x178d'
 *
 * @category Errors
 * @category generated
 */
    case mismatchedCollectionMintError = "0x178d"
    /**
 * SlotHashesEmpty: '0x178e'
 *
 * @category Errors
 * @category generated
 */
    case slotHashesEmptyError = "0x178e"
    /**
 * MetadataAccountMustBeEmpty: '0x178f'
 *
 * @category Errors
 * @category generated
 */
    case metadataAccountMustBeEmptyError = "0x178f"
    /**
 * MissingSetCollectionDuringMint: '0x1790'
 *
 * @category Errors
 * @category generated
 */
    case missingSetCollectionDuringMintError = "0x1790"
    /**
 * NoChangingCollectionDuringMint: '0x1791'
 *
 * @category Errors
 * @category generated
 */
    case noChangingCollectionDuringMintError = "0x1791"
    /**
 * CandyCollectionRequiresRetainAuthority: '0x1792'
 *
 * @category Errors
 * @category generated
 */
    case candyCollectionRequiresRetainAuthorityError = "0x1792"
    /**
 * GatewayProgramError: '0x1793'
 *
 * @category Errors
 * @category generated
 */
    case gatewayProgramErrorError = "0x1793"

    public var code: String? { self.rawValue }
}

extension candy_machineError: LocalizedError {
    public var errorDescription: String? {
        switch self {
            /**
 * IncorrectOwner: 'Account does not have correct owner!'
 *
 * @category Errors
 * @category generated
 */
    case .incorrectOwnerError: return "Account does not have correct owner!"
    /**
 * Uninitialized: 'Account is not initialized!'
 *
 * @category Errors
 * @category generated
 */
    case .uninitializedError: return "Account is not initialized!"
    /**
 * MintMismatch: 'Mint Mismatch!'
 *
 * @category Errors
 * @category generated
 */
    case .mintMismatchError: return "Mint Mismatch!"
    /**
 * IndexGreaterThanLength: 'Index greater than length!'
 *
 * @category Errors
 * @category generated
 */
    case .indexGreaterThanLengthError: return "Index greater than length!"
    /**
 * NumericalOverflowError: 'Numerical overflow error!'
 *
 * @category Errors
 * @category generated
 */
    case .numericalOverflowErrorError: return "Numerical overflow error!"
    /**
 * TooManyCreators: 'Can only provide up to 4 creators to candy machine (because candy machine is one)!'
 *
 * @category Errors
 * @category generated
 */
    case .tooManyCreatorsError: return "Can only provide up to 4 creators to candy machine (because candy machine is one)!"
    /**
 * UuidMustBeExactly6Length: 'Uuid must be exactly of 6 length'
 *
 * @category Errors
 * @category generated
 */
    case .uuidMustBeExactly6LengthError: return "Uuid must be exactly of 6 length"
    /**
 * NotEnoughTokens: 'Not enough tokens to pay for this minting'
 *
 * @category Errors
 * @category generated
 */
    case .notEnoughTokensError: return "Not enough tokens to pay for this minting"
    /**
 * NotEnoughSOL: 'Not enough SOL to pay for this minting'
 *
 * @category Errors
 * @category generated
 */
    case .notEnoughSOLError: return "Not enough SOL to pay for this minting"
    /**
 * TokenTransferFailed: 'Token transfer failed'
 *
 * @category Errors
 * @category generated
 */
    case .tokenTransferFailedError: return "Token transfer failed"
    /**
 * CandyMachineEmpty: 'Candy machine is empty!'
 *
 * @category Errors
 * @category generated
 */
    case .candyMachineEmptyError: return "Candy machine is empty!"
    /**
 * CandyMachineNotLive: 'Candy machine is not live!'
 *
 * @category Errors
 * @category generated
 */
    case .candyMachineNotLiveError: return "Candy machine is not live!"
    /**
 * HiddenSettingsConfigsDoNotHaveConfigLines: 'Configs that are using hidden uris do not have config lines, they have a single hash representing hashed order'
 *
 * @category Errors
 * @category generated
 */
    case .hiddenSettingsConfigsDoNotHaveConfigLinesError: return "Configs that are using hidden uris do not have config lines, they have a single hash representing hashed order"
    /**
 * CannotChangeNumberOfLines: 'Cannot change number of lines unless is a hidden config'
 *
 * @category Errors
 * @category generated
 */
    case .cannotChangeNumberOfLinesError: return "Cannot change number of lines unless is a hidden config"
    /**
 * DerivedKeyInvalid: 'Derived key invalid'
 *
 * @category Errors
 * @category generated
 */
    case .derivedKeyInvalidError: return "Derived key invalid"
    /**
 * PublicKeyMismatch: 'Public key mismatch'
 *
 * @category Errors
 * @category generated
 */
    case .publicKeyMismatchError: return "Public key mismatch"
    /**
 * NoWhitelistToken: 'No whitelist token present'
 *
 * @category Errors
 * @category generated
 */
    case .noWhitelistTokenError: return "No whitelist token present"
    /**
 * TokenBurnFailed: 'Token burn failed'
 *
 * @category Errors
 * @category generated
 */
    case .tokenBurnFailedError: return "Token burn failed"
    /**
 * GatewayAppMissing: 'Missing gateway app when required'
 *
 * @category Errors
 * @category generated
 */
    case .gatewayAppMissingError: return "Missing gateway app when required"
    /**
 * GatewayTokenMissing: 'Missing gateway token when required'
 *
 * @category Errors
 * @category generated
 */
    case .gatewayTokenMissingError: return "Missing gateway token when required"
    /**
 * GatewayTokenExpireTimeInvalid: 'Invalid gateway token expire time'
 *
 * @category Errors
 * @category generated
 */
    case .gatewayTokenExpireTimeInvalidError: return "Invalid gateway token expire time"
    /**
 * NetworkExpireFeatureMissing: 'Missing gateway network expire feature when required'
 *
 * @category Errors
 * @category generated
 */
    case .networkExpireFeatureMissingError: return "Missing gateway network expire feature when required"
    /**
 * CannotFindUsableConfigLine: 'Unable to find an unused config line near your random number index'
 *
 * @category Errors
 * @category generated
 */
    case .cannotFindUsableConfigLineError: return "Unable to find an unused config line near your random number index"
    /**
 * InvalidString: 'Invalid string'
 *
 * @category Errors
 * @category generated
 */
    case .invalidStringError: return "Invalid string"
    /**
 * SuspiciousTransaction: 'Suspicious transaction detected'
 *
 * @category Errors
 * @category generated
 */
    case .suspiciousTransactionError: return "Suspicious transaction detected"
    /**
 * CannotSwitchToHiddenSettings: 'Cannot Switch to Hidden Settings after items available is greater than 0'
 *
 * @category Errors
 * @category generated
 */
    case .cannotSwitchToHiddenSettingsError: return "Cannot Switch to Hidden Settings after items available is greater than 0"
    /**
 * IncorrectSlotHashesPubkey: 'Incorrect SlotHashes PubKey'
 *
 * @category Errors
 * @category generated
 */
    case .incorrectSlotHashesPubkeyError: return "Incorrect SlotHashes PubKey"
    /**
 * IncorrectCollectionAuthority: 'Incorrect collection NFT authority'
 *
 * @category Errors
 * @category generated
 */
    case .incorrectCollectionAuthorityError: return "Incorrect collection NFT authority"
    /**
 * MismatchedCollectionPDA: 'Collection PDA address is invalid'
 *
 * @category Errors
 * @category generated
 */
    case .mismatchedCollectionPDAError: return "Collection PDA address is invalid"
    /**
 * MismatchedCollectionMint: 'Provided mint account doesn't match collection PDA mint'
 *
 * @category Errors
 * @category generated
 */
    case .mismatchedCollectionMintError: return "Provided mint account doesn't match collection PDA mint"
    /**
 * SlotHashesEmpty: 'Slot hashes Sysvar is empty'
 *
 * @category Errors
 * @category generated
 */
    case .slotHashesEmptyError: return "Slot hashes Sysvar is empty"
    /**
 * MetadataAccountMustBeEmpty: 'The metadata account has data in it, and this must be empty to mint a new NFT'
 *
 * @category Errors
 * @category generated
 */
    case .metadataAccountMustBeEmptyError: return "The metadata account has data in it, and this must be empty to mint a new NFT"
    /**
 * MissingSetCollectionDuringMint: 'Missing set collection during mint IX for Candy Machine with collection set'
 *
 * @category Errors
 * @category generated
 */
    case .missingSetCollectionDuringMintError: return "Missing set collection during mint IX for Candy Machine with collection set"
    /**
 * NoChangingCollectionDuringMint: 'Can't change collection settings after items have begun to be minted'
 *
 * @category Errors
 * @category generated
 */
    case .noChangingCollectionDuringMintError: return "Can't change collection settings after items have begun to be minted"
    /**
 * CandyCollectionRequiresRetainAuthority: 'Retain authority must be true for Candy Machines with a collection set'
 *
 * @category Errors
 * @category generated
 */
    case .candyCollectionRequiresRetainAuthorityError: return "Retain authority must be true for Candy Machines with a collection set"
    /**
 * GatewayProgramError: 'Error within Gateway program'
 *
 * @category Errors
 * @category generated
 */
    case .gatewayProgramErrorError: return "Error within Gateway program"
        }
    }
}