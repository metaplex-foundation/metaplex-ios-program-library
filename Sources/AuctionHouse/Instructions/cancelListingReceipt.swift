/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita-swift
 */
import Foundation
import Solana
import Beet

/**
 * @category Instructions
 * @category CancelListingReceipt
 * @category generated
 */
public struct CancelListingReceiptInstructionArgs{
    let instructionDiscriminator: [UInt8] /* size: 8 */
    

    public init(
        instructionDiscriminator: [UInt8] /* size: 8 */ = cancelListingReceiptInstructionDiscriminator
    ) {
        self.instructionDiscriminator = instructionDiscriminator
    }
}
/**
 * @category Instructions
 * @category CancelListingReceipt
 * @category generated
 */
public let cancelListingReceiptStruct = FixableBeetArgsStruct<CancelListingReceiptInstructionArgs>(
    fields: [
        ("instructionDiscriminator", Beet.fixedBeet(.init(value: .collection(UniformFixedSizeArray<UInt8>(element: .init(value: .scalar(u8())), len: 8))))),
        
    ],
    description: "CancelListingReceiptInstructionArgs"
)
/**
* Accounts required by the _cancelListingReceipt_ instruction
*
* @property [_writable_] receipt  
* @property [] instruction   
* @category Instructions
* @category CancelListingReceipt
* @category generated
*/
public struct CancelListingReceiptInstructionAccounts {
    let receipt: PublicKey
    let systemProgram: PublicKey?
    let instruction: PublicKey

    public init(
        receipt: PublicKey,
        systemProgram: PublicKey? = nil,
        instruction: PublicKey
    ) {
        self.receipt = receipt
        self.systemProgram = systemProgram
        self.instruction = instruction
    }
}

public let cancelListingReceiptInstructionDiscriminator = [171, 59, 138, 126, 246, 189, 91, 11] as [UInt8]

/**
* Creates a _CancelListingReceipt_ instruction.
*
* @param accounts that will be accessed while the instruction is processed
* @category Instructions
* @category CancelListingReceipt
* @category generated
*/
public func createCancelListingReceiptInstruction(accounts: CancelListingReceiptInstructionAccounts, 
programId: PublicKey=PublicKey(string: "hausS13jsjafwWwGqZTUQRmWyvyxn9EQpqMwV1PBBmk")!) -> TransactionInstruction {

    let data = cancelListingReceiptStruct.serialize(
            instance: ["instructionDiscriminator": cancelListingReceiptInstructionDiscriminator ])

    let keys: [AccountMeta] = [
        AccountMeta(
            publicKey: accounts.receipt,
            isSigner: false,
            isWritable: true
        ),
        AccountMeta(
            publicKey: accounts.systemProgram ?? PublicKey.systemProgramId,
            isSigner: false,
            isWritable: false
        ),
        AccountMeta(
            publicKey: accounts.instruction,
            isSigner: false,
            isWritable: false
        )
    ]

    let ix = TransactionInstruction(
                keys: keys,
                programId: programId,
                data: data.0.bytes
            )
    return ix
}