/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita-swift
 */
import Foundation
import Beet
import Solana

/**
 * @category Instructions
 * @category DeprecatedSetReservationList
 * @category generated
 */
public struct DeprecatedSetReservationListInstructionArgs{
    let instructionDiscriminator: [UInt8] /* size: 8 */
    let setReservationListArgs: SetReservationListArgs

    public init(
        instructionDiscriminator: [UInt8] /* size: 8 */ = deprecatedSetReservationListInstructionDiscriminator,
        setReservationListArgs: SetReservationListArgs
    ) {
        self.instructionDiscriminator = instructionDiscriminator
        self.setReservationListArgs = setReservationListArgs
    }
}
/**
 * @category Instructions
 * @category DeprecatedSetReservationList
 * @category generated
 */
public let DeprecatedSetReservationListStruct = FixableBeetArgsStruct<DeprecatedSetReservationListInstructionArgs>(
    fields: [
        ("instructionDiscriminator", Beet.fixedBeet(.init(value: .collection(UniformFixedSizeArray<UInt8>(element: .init(value: .scalar(u8())), len: 8))))),
        ("setReservationListArgs", setReservationListArgsBeetWrapped)
    ],
    description: "DeprecatedSetReservationListInstructionArgs"
)
/**
* Accounts required by the _DeprecatedSetReservationList_ instruction
*
* @property [_writable_] masterEdition  
* @property [_writable_] reservationList  
* @property [**signer**] resource   
* @category Instructions
* @category DeprecatedSetReservationList
* @category generated
*/
public struct DeprecatedSetReservationListInstructionAccounts {
    let masterEdition: PublicKey
    let reservationList: PublicKey
    let resource: PublicKey

    public init(
        masterEdition: PublicKey,
        reservationList: PublicKey,
        resource: PublicKey
    ) {
        self.masterEdition = masterEdition
        self.reservationList = reservationList
        self.resource = resource
    }
}

public let deprecatedSetReservationListInstructionDiscriminator = [68, 28, 66, 19, 59, 203, 190, 142] as [UInt8]

/**
* Creates a _DeprecatedSetReservationList_ instruction.
*
* @param accounts that will be accessed while the instruction is processed
  * @param args to provide as instruction data to the program
 * 
* @category Instructions
* @category DeprecatedSetReservationList
* @category generated
*/
public func createDeprecatedSetReservationListInstruction(accounts: DeprecatedSetReservationListInstructionAccounts, 
args: DeprecatedSetReservationListInstructionArgs, programId: PublicKey=PublicKey(string: "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s")!) -> TransactionInstruction {

    let data = DeprecatedSetReservationListStruct.serialize(
            instance: ["instructionDiscriminator": deprecatedSetReservationListInstructionDiscriminator,
"setReservationListArgs": args.setReservationListArgs])

    let keys: [AccountMeta] = [
        AccountMeta(
            publicKey: accounts.masterEdition,
            isSigner: false,
            isWritable: true
        ),
        AccountMeta(
            publicKey: accounts.reservationList,
            isSigner: false,
            isWritable: true
        ),
        AccountMeta(
            publicKey: accounts.resource,
            isSigner: true,
            isWritable: false
        )
    ]

    let ix = TransactionInstruction(
                keys: keys,
                programId: programId,
                data: data.0.bytes
            )
    return ix
}